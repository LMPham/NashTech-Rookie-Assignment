@{
    ViewData["Title"] = "Home Page";
}

@model HomeIndexModel

@functions {
    public IDictionary<string, string> getRoute(int pageNumber)
    {
        var temp = new LookupDto(Model.Queries);
        temp.PageNumber = pageNumber;
        return temp.ToDictionary();
    }

    public int PreviousPageNumber(int i)
    {
        return Model.Products.PageNumber - i;
    }

    public int NextPageNumber(int i)
    {
        return Model.Products.PageNumber + i;
    }
}

<div class="row">
    @* Filter section *@
    <div class="col-2">
        @*Filter by category*@
        @await Component.InvokeAsync("FilterByCategoryId", Model)

        @* Filter by price *@
        @await Component.InvokeAsync("FilterByPrice", Model.Queries)

        @*Filter by customer review score*@
        @await Component.InvokeAsync("FilterByCustomerReviewScore", Model.Queries)
    </div>

    @*Products section*@
    <div class="col-10">
        @*Search result summary*@
        <div class="row">
            <div class="col text-start p-1">
                @{
                    string header = "";
                    string text = "";

                    if(Model.Products.Count > 0)
                    {
                        if (Model.Queries.HasFilter())
                        {
                            header = "Results";
                            if (Model.Products.TotalPages > 1)
                            {
                                text += Model.Products.FirstItemNumber + "-" + Model.Products.LastItemNumber + " of " + Model.Products.TotalCount + " results ";
                            }
                            else
                            {
                                if (Model.Products.TotalCount > 1)
                                {
                                    text += Model.Products.TotalCount + " results ";
                                }
                                else
                                {
                                    text += Model.Products.TotalCount + " result ";
                                }
                            }

                            if (Model.Queries.HasFilterBySearch())
                            {
                                <h5>@header</h5>
                                <p>@text for <span>"@Model.Queries.Search"<span /></p>
                            }
                            else
                            {
                                <h5>@header</h5>
                                <p>@text</p>
                            }
                        }
                        else
                        {
                            <h5>Featured products</h5>
                            <p>Top sellers in a wide range of products for you</p>
                        }
                    }
                    else
                    {
                        header = "No results";
                        text = "Try checking your spelling or use more general terms";
                        if (Model.Queries.HasFilterBySearch())
                        {
                            if (Model.Queries.HasFilterByDepartmentId())
                            {
                                var department = ViewData["selectedDepartment"] as Department;
                                <h5 class="fw-normal">@header for <span>"@Model.Queries.Search"<span /> in <span>@department.Name</span>.</h5>
                                <p>@text</p>
                            }
                            else
                            {
                                <h5 class="fw-normal">@header for <span>"@Model.Queries.Search"<span />.</h5>
                                <p>@text</p>
                            }
                        }
                        else
                        {
                            <h5>@header</h5>
                            <p>@text</p>
                        }
                    }
                }
            </div>
        </div>

        @*Product list*@
        @await Component.InvokeAsync("ProductList", Model.Products)

        @*Pagination*@
        @if (Model.Products.Count > 0)
        {
            <div class="row mt-3">
                <nav class="d-flex justify-content-center" aria-label="Page navigation">
                    <ul class="pagination shadow-sm">
                        @*Previous page buttons*@
                        @if (Model.Products.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link round-left-border-l" asp-controller="Home" asp-action="Filter" asp-all-route-data="@getRoute(Model.Products.PageNumber - 1)">
                                    &#8249; Previous
                                </a>
                            </li>

                            @*Previous pages*@
                            @*Renders only 3 previous pages. If there are more than 3, renders 2 previous pages and first page*@
                            for (int i = 3; i >= 1; i--)
                            {
                                if (i <= Model.Products.PreviousPages)
                                {
                                    if (i == 3 && Model.Products.PreviousPages > 3)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" asp-controller="Home" asp-action="Filter" asp-all-route-data="@getRoute(1)">
                                                1
                                            </a>
                                        </li>
                                        <li class="page-item">
                                            <a class="page-link page-link-disabled">
                                                ...
                                            </a>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="page-item">
                                            <a class="page-link" asp-controller="Home" asp-action="Filter" asp-all-route-data="@getRoute(Model.Products.PageNumber - i)">
                                                @PreviousPageNumber(i)
                                            </a>
                                        </li>
                                    }
                                }
                            }
                        }
                        else
                        {
                            <li class="page-item">
                                <a class="page-link round-left-border-l page-link-disabled">
                                    &#8249; Previous
                                </a>
                            </li>
                        }

                        @*Current page*@
                        <li class="page-item">
                            <a class="page-link page-link-active">
                                @Model.Products.PageNumber
                            </a>
                        </li>

                        @*Next page button*@
                        @if (Model.Products.HasNextPage)
                        {
                            @*Next pages*@
                            @*Renders only 3 next pages. If there are more than 3, renders 2 next pages and last page*@
                            for (int i = 1; i <= 3; i++)
                            {
                                if (i <= Model.Products.NextPages)
                                {
                                    if (i == 3 && Model.Products.NextPages > 3)
                                    {
                                        <li class="page-item">
                                            <a class="page-link page-link-disabled">
                                                ...
                                            </a>
                                        </li>
                                        <li class="page-item">
                                            <a class="page-link" asp-controller="Home" asp-action="Filter" asp-all-route-data="@getRoute(Model.Products.TotalPages)">
                                                @Model.Products.TotalPages
                                            </a>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="page-item">
                                            <a class="page-link" asp-controller="Home" asp-action="Filter" asp-all-route-data="@getRoute(Model.Products.PageNumber + i)">
                                                @NextPageNumber(i)
                                            </a>
                                        </li>
                                    }
                                }
                            }
                            <li class="page-item">
                                <a class="page-link round-right-border-l" asp-controller="Home" asp-action="Filter" asp-all-route-data="@getRoute(Model.Products.PageNumber + 1)">
                                    Next &#8250;
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item">
                                <a class="page-link round-right-border-l page-link-disabled">
                                    Next &#8250;
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        }
    </div>
</div>
/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const AuthenticatedHomeIndexLazyImport = createFileRoute(
  '/_authenticated/home/',
)()
const AuthenticatedForbiddenIndexLazyImport = createFileRoute(
  '/_authenticated/forbidden/',
)()

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedHomeIndexLazyRoute = AuthenticatedHomeIndexLazyImport.update(
  {
    path: '/home/',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/home/index.lazy').then((d) => d.Route),
)

const AuthenticatedForbiddenIndexLazyRoute =
  AuthenticatedForbiddenIndexLazyImport.update({
    path: '/forbidden/',
    getParentRoute: () => AuthenticatedRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/forbidden/index.lazy').then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/forbidden/': {
      id: '/_authenticated/forbidden/'
      path: '/forbidden'
      fullPath: '/forbidden'
      preLoaderRoute: typeof AuthenticatedForbiddenIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/home/': {
      id: '/_authenticated/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthenticatedHomeIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedForbiddenIndexLazyRoute,
    AuthenticatedHomeIndexLazyRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/forbidden/",
        "/_authenticated/home/"
      ]
    },
    "/_authenticated/forbidden/": {
      "filePath": "_authenticated/forbidden/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/home/": {
      "filePath": "_authenticated/home/index.lazy.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
